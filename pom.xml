<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.omlett.coffeehaus</groupId>
  <artifactId>player</artifactId>
  <version>1.0-SNAPSHOT</version>

  <!-- Inherit defaults from Spring Boot -->
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.2.0.RELEASE</version>
  </parent>

  <properties>
    <!-- Bom Versions -->
    <keycloak.version>7.0.1</keycloak.version>
    <!-- Dependency Versions -->
    <slf4j.version>1.7.9</slf4j.version>
    <lombok.version>1.16.22</lombok.version>
    <protobuf.version>3.6.1</protobuf.version>
    <spotify.java.api.version>4.0.1</spotify.java.api.version>
    <spring.cassandra.version>2.2.0.RELEASE</spring.cassandra.version>
    <!-- Maven Plugin Versions -->
    <compiler.plugin.version>3.8.0</compiler.plugin.version>
    <protobuf.plugin.version>0.6.1</protobuf.plugin.version>
    <fabric8.plugin.version>4.3.0</fabric8.plugin.version>
    <!-- Maven Plugin Configurations -->
    <compiler.source.version>12</compiler.source.version>
    <compiler.target.version>12</compiler.target.version>
    <protobuf.protoc.path>/usr/local/opt/protobuf@3.6/bin/protoc</protobuf.protoc.path>
    <fabric8.docker.image.repository>us.gcr.io/omlett-platform</fabric8.docker.image.repository>
    <fabric8.resource.directory>${basedir}/fabric8</fabric8.resource.directory>
    <fabric8.build.jar.file>target/${project.build.finalName}-exec.jar</fabric8.build.jar.file>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.keycloak.bom</groupId>
        <artifactId>keycloak-adapter-bom</artifactId>
        <version>${keycloak.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- Spring -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>

    <!-- TODO: Spring Security: JWT Verification, CORS headers
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    -->

    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-cassandra</artifactId>
      <version>${spring.cassandra.version}</version>
    </dependency>

    <!-- Tools/Utilities -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <version>${protobuf.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java-util</artifactId>
      <version>${protobuf.version}</version>
    </dependency>

    <!-- External APIs -->
    <dependency>
      <groupId>se.michaelthelin.spotify</groupId>
      <artifactId>spotify-web-api-java</artifactId>
      <version>${spotify.java.api.version}</version>
    </dependency>
  </dependencies>

  <!-- Package as an executable jar -->
  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler.plugin.version}</version>
        <configuration>
          <source>${compiler.source.version}</source>
          <target>${compiler.target.version}</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.xolstice.maven.plugins</groupId>
        <artifactId>protobuf-maven-plugin</artifactId>
        <version>${protobuf.plugin.version}</version>
        <configuration>
          <useArgumentFile>true</useArgumentFile>
          <protocExecutable>${protobuf.protoc.path}</protocExecutable>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>build-docker-image</id>
      <activation>
        <property>
          <name>build</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric8-maven-plugin</artifactId>
            <version>${fabric8.plugin.version}</version>
            <executions>
              <!-- TODO -->
            </executions>
            <configuration>
              <buildArgs>
                <JAR_FILE>${fabric8.build.jar.file}</JAR_FILE>
              </buildArgs>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>helm</id>
      <activation>
        <property>
          <name>helm</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric8-maven-plugin</artifactId>
            <version>${fabric8.plugin.version}</version>
            <configuration>
              <ignoreServices>false</ignoreServices>
              <helm>
                <type>kubernetes</type>
              </helm>
              <registry>${fabric8.docker.image.repository}</registry>
              <resourceDir>${fabric8.resource.directory}</resourceDir>
            </configuration>
            <executions>
              <execution>
                <id>create-helm-chart</id>
                <phase>package</phase>
                <goals>
                  <goal>resource</goal>
                  <goal>helm</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>deploy-containers</id>
      <activation>
        <property>
          <name>deploy-containers</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric8-maven-plugin</artifactId>
            <version>${fabric8.plugin.version}</version>
            <configuration>
              <ignoreServices>false</ignoreServices>
              <registry>${fabric8.docker.image.repository}</registry>
              <resourceDir>fabric8.resource.directory</resourceDir>
            </configuration>
            <executions>
              <execution>
                <id>deploy-to-k8s</id>
                <phase>deploy</phase>
                <goals>
                  <goal>resource</goal>
                  <goal>apply</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <distributionManagement>
    <repository>
      <id>internal</id>
      <url>https://archiva.omlett.io/repository/internal/</url>
    </repository>
    <snapshotRepository>
      <id>snapshots</id>
      <url>https://archiva.omlett.io/repository/snapshots/</url>
    </snapshotRepository>
  </distributionManagement>
</project>